#!/bin/python

from astropy.io import fits
from astropy.table import Table, vstack
import argparse
import numpy
import glob
import sys

parser = argparse.ArgumentParser(description="Script to merge dithering_signals outputs")
parser.add_argument("-p", "--prefix", 
                    required=True)
parser.add_argument("-s", "--seeing", 
                    required=False,
                    default=0.1)
parser.add_argument('-t', '--template',
                    required=False,
                    default='template1')
parser.add_argument('-a', '--pattern',
                    required=False,
                    default='triangle')
parsed_args = parser.parse_args()

folder_list  = glob.glob("{}/*".format(parsed_args.prefix))
search_radii = [folder_name.split("um")[0] for folder_name in folder_list] # not needed. remove next time

for folder in folder_list:
    print("running for folder {}".format(folder))
    files = glob.glob("{}/*{}_seeing{}_*_{}*".format(folder, parsed_args.pattern, parsed_args.seeing, parsed_args.template))
    if len(files) != 4:
        print("there is a problem with the given set of arguments for {}".format(folder))
        print(len(files))
    hdus  = fits.open(files[0])
    table = Table(hdus[1].data)
    hdus.close()
    for filename in files[1:]:
        hdus = fits.open(filename)
        table_to_add = Table(hdus[1].data)
        table = vstack([table, table_to_add])
        hdus.close()
    new_filename = "_".join(files[0].split("_")[:5])+"_combined_"+"_".join(files[0].split("_")[6:])
    print("merging files into: {}".format(new_filename))
    table.write(new_filename, format="fits")
